{
  "name": "mimetype",
  "version": "0.0.5",
  "description": "A mime type catalog driven by filename extensions.",
  "main": "./mimetype.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/rsdoiel/mimetype-js.git"
  },
  "author": {
    "name": "R. S. Doiel",
    "email": "rsdoiel@gmail.com",
    "url": "https://github.com/rsdoiel"
  },
  "maintainers": [
    {
      "name": "rsdoiel",
      "email": "rsdoiel@gmail.com"
    }
  ],
  "engines": {
    "node": ">= 0.8",
    "npm": ">= 1"
  },
  "devDependencies": {
    "yui": "3.10.x"
  },
  "scripts": {
    "test": "node tests/mimetype_test.js"
  },
  "bugs": {
    "url": "http://github.com/rsdoiel/mimetype-js/issues"
  },
  "readme": "[![build status](https://secure.travis-ci.org/rsdoiel/mimetype-js.png)](http://travis-ci.org/rsdoiel/mimetype-js)\nmimetype-js\n===========\n\n# Overview\n\nI find keep making these file extension lookup tables for mime types.  It's \nabout time I put it in a module to save me the trouble.\n\n# Examples\n\n## general case\n\n```JavaScript\n\tvar mimetype = require('mimetype');\n\t\n\tconsole.log(mimetype.lookup(\"myfile.txt\")); // Should display text/plain\n\tmimetype.set('.exotic', 'x-application/experimental'); // Add/update a mime type in the catalog\n\tconsole.log(mimetype.lookup(\"myfile.exotic\")); // Should display x-application/experimental\n\tmimetype.del('.exotic'); // Removes the mime type from the catalog\n\tconsole.log(mimetype.lookup(\"myfile.exitoc\")); // Should display false\n\tmimetype.forEach(function (ext, mime_type_string) {\n\t\tconsole.log(ext, mime_type_string); // Display the extension and matching mimetype in catalog\n\t});\n```\n\n## Special cases\n\nSometimes detecting by filename extensions isn't work and you want to \ndefault to a general purposes mime-type (e.g. text/plain, application/octet-stream).\n\n```JavaScript\n\tvar mimetype = require('mimetype');\n\t\n\t// This should display 0 (false)\n\tconsole.log(mimetype.lookup(\"filename.unknownMimeType\");\n\t// This should display the string text/plain\n\tconsole.log(mimetype.lookup(\"filename.unknownMimeType\", false, \"text/plain\");\n\t// This should display the string text/plain; charset=UTF-8\n\tconsole.log(mimetype.lookup(\"filename.unknownMimeType\", \"UTF-8\", \"text/plain\");\n```\n\n## Using mimetype.js with MongoDB Shell\n\nWhile this was implemented as a NodeJS module it also works under MongoDB's shell.\nInstead of including with a \"require\" you would load the JavaScript file _load-mimetype.js_.\n\n```JavaScript\n\tload(\"./extras/load-mimetype.js\");\n\tprint(\"Check the mime type of test.txt:\" + MimeType.lookup(\"test.txt\"));\n```\n\nThis would display something like-\n\n```shell\n\tMongoDB shell version: 2.2.0\n\tconnecting to: test\n\t> load(\"./extras/load-mimetype.js\");\n\t> print(\"Check the mime type of test.txt: \" + MimeType.lookup(\"test.txt\"));\n\tCheck the mime type of test.txt: text/plain\n\t> \n```\n",
  "readmeFilename": "README.md",
  "_id": "mimetype@0.0.5",
  "dist": {
    "shasum": "9cb586acfdd3ef08792eb8051de8b4fc3d7ed575",
    "tarball": "http://registry.npmjs.org/mimetype/-/mimetype-0.0.5.tgz"
  },
  "_from": "mimetype@*",
  "_npmVersion": "1.2.24",
  "_npmUser": {
    "name": "rsdoiel",
    "email": "rsdoiel@gmail.com"
  },
  "directories": {},
  "_shasum": "9cb586acfdd3ef08792eb8051de8b4fc3d7ed575",
  "_resolved": "https://registry.npmjs.org/mimetype/-/mimetype-0.0.5.tgz"
}
