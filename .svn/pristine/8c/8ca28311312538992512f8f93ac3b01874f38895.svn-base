myApp.controller('CreateBlurbCtrl', ['$scope', '$http', '$location', '$upload', '$rootScope', 'toaster', function($scope, $http, $location, $upload, $rootScope, toaster) {
        $scope.errorMessage;
    $scope.fileuploaded = "";

        $scope.createBlurb = function(){
            if($scope.minimumOffer!="" && $scope.blurbTitle!=""){
                var createBlurbData = {}
                createBlurbData.minoffer = $scope.minimumOffer;
                createBlurbData.title = $scope.blurbTitle;
                createBlurbData.description = $scope.blurbDescription;
                createBlurbData.url = $scope.blurbUrlLink;
//                createBlurbData.fileName = "sidhome";
//                createBlurbData.link = $scope.blurbLink;
                $http({method: 'POST', url: '/blurb', data: createBlurbData}).
                   success(function(data, status, headers, config) {
                    if(status == 200 && data.message == "Blurb Created"){
                           toaster.pop('success', "", data.message);
                        //save uploaded file to server
                        if ($scope.fileuploaded) {
                            $scope.upload = $upload.upload({
                            url: $rootScope.baseurl + '/blurbfileupload/'+ data.response.id , //upload.php script, node.js route, or servlet url
//                            method: 'POST',
                            // headers: {'header-key': 'header-value'},
                            // withCredentials: true,
                            data: {
                                myObj: "image"
                            },
                            file: $scope.fileuploaded, // or list of files: $files for html5 only
                            /* set the file formData name ('Content-Desposition'). Default is 'file' */
                            //fileFormDataName: myFile, //or a list of names for multiple files (html5).
                            /* customize how data is added to formData. See #40#issuecomment-28612000 for sample code */
                            //formDataAppender: function(formData, key, val){}
                        }).progress(function (evt) {
                            console.log('percent: ' + parseInt(100.0 * evt.loaded / evt.total));
                        }).success(function (data, status, headers, config) {
                            // file is uploaded successfully
                            console.log(data.message);
                            if(status == 200){
                               toaster.pop('success', "", data.message);
                            }
                        }).error(function (data, status, headers, config) {
                            // file not uploaded successfully
                            console.log(data);
                            if(status == 500){
                               toaster.pop('error', "", data.message);
                            }
                            
                            if(status == 400){
                               toaster.pop('error', "", data.message);
                            }
                            if(status == 403){
                                toaster.pop('error', "", data.message);
                            }
                            if(status == 404){
                                toaster.pop('error', "", data.message);
                               $location.path("/page-not-found");
                            }
                        
                        });

                    }
                        //change redirect to blurbs created by user
                        $location.path("/admin-blurbs");

                   }
                       
                       
                     }).
                 error(function(data, status, headers, config) {
                   if(status == 500){
                        toaster.pop('error', "", data.message);
                    }
                       if(status == 401){
                           toaster.pop('error', "", data.message);
                       }
                       if(status == 403){
                           toaster.pop('error', "", data.message);
                       }
                     if(status == 400){
                           toaster.pop('error', "", data.message);
                       }
                 }); 
            }else{
                toaster.pop('warning', "", "Please fillup Required fields");
//            $scope.errorMessage = 
            }
        }
        
        //file upload starts
        $scope.onFileSelect = function ($files) {
            
            //$files: an array of files selected, each file has name, size, and type.
            for (var i = 0; i < $files.length; i++) {
                var file = $files[i];
                var ext = file.name.split('.').pop();
                if(ext=="pdf" && file.type=="application/pdf"){
                    $scope.fileuploaded = file
                }else{
                    toaster.pop('error', "", "Please upload only pdf files.");
                    angular.forEach(
                        angular.element("input[type='file']"),
                        function(inputElem) {
                          angular.element(inputElem).val(null);
                    });
                }

                //.error(...)
                //.then(success, error, progress); 
                //.xhr(function(xhr){xhr.upload.addEventListener(...)})// access and attach any event listener to XMLHttpRequest.
            }
        }

}]);